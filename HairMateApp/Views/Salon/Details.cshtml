@model HairMateApp.Application.ViewModels.Salon.SalonDetailsVm

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<div class="salon-details">
    <h1 class="d-flex align-items-center mb-4">
        <img src="@Model.LogoUrl" alt="@Model.Name Logo" class="me-3 logo-large" />
        @Model.Name
    </h1>

    <p class="lead">@Model.Description</p>

    <h3 class="mt-4">Details</h3>
    <p><strong>Type:</strong> @Model.Type</p>
    <p><strong>Province:</strong> @Model.Province</p>
    <p><strong>City:</strong> @Model.City</p>
    <p><strong>Street:</strong> @Model.Street</p>
    <p><strong>Postal Code:</strong> @Model.PostalCode</p>
    <p><strong>Payment Type:</strong> @Model.PaymentType</p>
    <p><strong>Average Rating:</strong> @Model.AverageRating</p>

    <h3 class="mt-4">Services</h3>
    @if (Model.Services != null && Model.Services.Any())
    {
        <ul class="list-group list-group-flush">
            @foreach (var service in Model.Services)
            {
                <li class="list-group-item">@service.Name - @service.Price - @service.ServiceType</li>
            }
        </ul>
    }
    else
    {
        <p>No services available.</p>
    }

    <h3 class="mt-4">Reviews</h3>
    @if (Model.Reviews != null && Model.Reviews.Any())
    {
        <ul class="list-group list-group-flush">
            @foreach (var review in Model.Reviews)
            {
                <li class="list-group-item">
                    <strong>@review.UserName</strong> Ocena: @review.Rating/5
                    <p>@review.Comment</p>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No reviews available.</p>
    }

    <a href="@Url.Action("AddReview", "Salon", new { salonId = Model.SalonId })" class="btn btn-primary mt-3">Add Review</a>

    <h3 class="mt-4">Book an Appointment</h3>
    <form asp-action="BookAppointment" method="post" class="mt-3">
        <input type="hidden" name="salonId" value="@Model.SalonId" />
        <div class="form-group mb-3">
            <label for="date">Date:</label>
            <input type="date" id="date" name="date" class="form-control" required />
        </div>
        <div class="form-group mb-3">
            <label for="time">Time:</label>
            <select id="time" name="time" class="form-control" required>
                <option value="08:00">08:00</option>
                <option value="09:00">09:00</option>
                <option value="10:00">10:00</option>
                <option value="11:00">11:00</option>
                <option value="12:00">12:00</option>
                <option value="13:00">13:00</option>
                <option value="14:00">14:00</option>
                <option value="15:00">15:00</option>
                <option value="16:00">16:00</option>
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Book</button>
    </form>

    @if (Model.CanEdit)
    {
        <a href="@Url.Action("Edit", "Salon", new { id = Model.SalonId })" class="btn btn-warning mt-3">Edit</a>
    }

    @if (User.IsInRole("Admin"))
    {
        <form asp-action="Delete" method="post" class="mt-3">
            <input type="hidden" name="id" value="@Model.SalonId" />
            <button type="submit" class="btn btn-danger">Delete</button>
        </form>
    }

    @if (User.IsInRole("Employee"))
    {
        <a href="@Url.Action("Appointments", "Salon", new { salonId = Model.SalonId })" class="btn btn-info mt-3">View Appointments</a>
    }

    @if (User.IsInRole("Employee") || User.IsInRole("Admin"))
    {
        <a href="@Url.Action("AddService", "Salon", new { salonId = Model.SalonId })" class="btn btn-primary mt-3">Add Service</a>
    }
</div>

<style>
    .salon-details {
        font-family: 'Roboto', sans-serif;
    }

        .salon-details h1 {
            font-weight: 700;
        }

        .salon-details .lead {
            font-size: 1.25rem;
        }

        .salon-details h3 {
            font-weight: 500;
        }

    .list-group-item {
        background-color: #f8f9fa;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        transition: background-color 0.3s, border-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

    .btn-warning {
        background-color: #ffc107;
        border-color: #ffc107;
        transition: background-color 0.3s, border-color 0.3s;
    }

        .btn-warning:hover {
            background-color: #e0a800;
            border-color: #d39e00;
        }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
        transition: background-color 0.3s, border-color 0.3s;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
            border-color: #545b62;
        }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
        transition: background-color 0.3s, border-color 0.3s;
    }

        .btn-danger:hover {
            background-color: #c82333;
            border-color: #bd2130;
        }

    .btn-info {
        background-color: #17a2b8;
        border-color: #17a2b8;
        transition: background-color 0.3s, border-color 0.3s;
    }

        .btn-info:hover {
            background-color: #138496;
            border-color: #117a8b;
        }

    .logo-large {
        height: 100px;
    }
</style>
